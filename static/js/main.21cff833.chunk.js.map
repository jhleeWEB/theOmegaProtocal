{"version":3,"sources":["env.ts","components/PartyList/Debuffs.tsx","components/PartyList/JobIcon.tsx","components/PartyList/Member.tsx","components/PartyList/index.tsx","redux/slices/playerSlice.ts","components/PartyList/Macros.tsx","hooks/useDebuffGenerator.tsx","hooks/usePhaseManager.tsx","components/PhaseTimers.tsx","routes/Home.tsx","Router.tsx","config/_mixin.tsx","global-styles.ts","components/ScrollToTop.tsx","interfaces.ts","App.tsx","hooks/useDarkMode.tsx","redux/slices/simulationSlice.ts","redux/store.ts","index.tsx"],"names":["PUBLIC_URL","process","Container","styled","div","_templateObject","_taggedTemplateLiteral","Debuffs","_ref","stacked","debuffs","reduce","prev","curr","getStackedDebuffs","_useState","useState","concat","_useState2","_slicedToArray","buffSrcs","setBuffSrcs","dynamisSrc","dice1Src","dice2Src","hellWallNearSrc","hellWallFarSrc","psFarSrc","psNearSrc","damageIncreaseSrc","useEffect","setInterval","prevState","sort","Math","random","React","createElement","width","src","map","n","JobIcon","job","path","height","Name","_templateObject2","PlayerInfoContainer","_templateObject3","NameContainer","_templateObject4","HealthContainer","_templateObject5","HealthBarContainer","_templateObject6","Bar","_templateObject7","Member","memberInfos","Fragment","member","i","name","key","PartyList","party","useSelector","state","partySlice","createSlice","initialState","chainedIndexes","isChained","isNumbered","reducers","addDebuff","action","_action$payload","payload","target","debuff","push","removeDebuff","_action$payload2","index","indexOf","length","splice","removeAllHellwallDebuffs","forEach","hellwallFarIndex","hellwallNearIndex","includes","removeAllTetherDebuffs","removeAllDamageIncreaseDebuffs","dmgIncreaseIndex","removeDiceHellwallDebuffs","dice","removeDiceDebuffs","diceIndex","resetPlayer","players","updatePlayerButtonStatus","_action$payload3","resetChainPlayer","_objectSpread","addMultipleDebuffs","targetPlayers","findIndex","m","_toConsumableArray","_partySlice$actions","actions","Marks","Button","button","props","isClicked","color","MarkContainer","Mark","player","dispatch","useDispatch","chainIconSrc","numberIconSrc","isButtonDisabled","onClickHandler","clickBtnType","onClick","disabled","ResetMark","_ref2","resetHandler","resetIconSrc","Macros","getDynamisTargetPlayers","fullPlayers","phase","excludedPlayers","filter","useDebuffGenerator","_useSelector","randomNoRepeats","array","copy","slice","floor","item","applyHellwall","debuffedPlayers","hellWallTargets","Array","debuffCount","chooser","generateRandomHellWall","applyDynamis","potentialTargets","hellwallTargets","confirmedTargets","generateRandomDynamis","batch","applyDamageIncrease","targets","applyPSTether","psType","applyOmegaDynamis","generateOmegaRandomDynamis","removeHellwall","removeTether","phaseInitalTimes","start","end","tether","usePhaseManager","delta","sigma","omega1","omega2","debuffGenerator","phaseStatus","setPhaseStatus","_useState3","_useState4","simulationResult","setSimulationResult","_useCountDown","useCountDown","_useCountDown2","deltaTimeLeft","deltaCountdown","_useCountDown3","_useCountDown4","deltaHellwallTimeLeft","deltaHellwallCountdown","_useCountDown5","_useCountDown6","sigmaTetherStartTimeLeft","sigmaTetherStartCountdown","_useCountDown7","_useCountDown8","sigmaTetherEndTimeLeft","sigmaTetherEndCountdown","_useCountDown9","_useCountDown10","sigmaTimeLeft","sigmaCountdown","_useCountDown11","_useCountDown12","sigmaHellwallTimeLeft","sigmaHellwallCountdown","_useCountDown13","_useCountDown14","omega1TimeLeft","omega1Countdown","_useCountDown15","_useCountDown16","omega1HellwallTimeLeft","omega1HellwallCountdown","_useCountDown17","_useCountDown18","omega2TimeLeft","omega2Countdown","_useCountDown19","_useCountDown20","omega2HellwallTimeLeft","omega2HellwallCountdown","isSuccess","timer","startDeltaPhase","startSigmaPhase","startOmega1Phase","startOmega2Phase","TimerContainer","Timer","Time","Prefix","Suffix","Result","PhaseTimers","showDeltaTimer","showDeltaHellwallTimer","showSigmaTimer","showSigmaHellwallTimer","showOmega1Timer","showOmega1HellwallTimer","showOmega2Timer","showOmega2HellwallTimer","CountdownCircleTimer","isPlaying","duration","colors","colorsTime","strokeWidth","size","remainingTime","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","main","PartyContainer","ControlButtonContainer","RuleContainer","Sigma","phaseManager","isStartButtonClicked","setIsStartButtonClicked","className","window","location","reload","Router","Switch","Route","component","Home","sizes","themeList","light","body","text","toggleBorder","gradient","dark","customMediaQuery","maxWidth","media","custom","desktop","tablet","phone","GlobalStyle","createGlobalStyle","theme","giant","ScrollToTop","children","pathname","useLocation","scrollTo","Theme","ThemeContext","createContext","LIGHT","toggleTheme","console","error","App","_useDarkMode","defaultTheme","setTheme","localTheme","localStorage","getItem","JSON","parse","setItem","stringify","DARK","useDarkMode","Provider","value","ToastContainer","draggable","position","autoClose","pauseOnHover","BrowserRouter","basename","BackTop","simulationSlice","history","before","after","updateBefore","updateAfter","_simulationSlice$acti","store","configureStore","reducer","partyReducer","simulation","simulationReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21cff833.chunk.js","sourcesContent":["export const PUBLIC_URL = process.env.PUBLIC_URL;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Debuff } from '../../redux/slices/playerSlice';\nimport { PUBLIC_URL } from '../../env';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst Container = styled.div``;\n\nconst getStackedDebuffs = (debuffs: Debuff[]) => {\n  const stacked = debuffs.reduce(function (prev, curr) {\n    prev[curr] = (prev[curr] || 0) + 1;\n    return prev;\n  }, {});\n  return stacked;\n};\n\ninterface Props {\n  debuffs: Debuff[];\n}\n\nconst Debuffs = ({ debuffs }: Props) => {\n  const stacked = getStackedDebuffs(debuffs);\n  const [buffSrcs, setBuffSrcs] = useState<string[]>([\n    `${PUBLIC_URL}/buffIcons/heal1.png`,\n    `${PUBLIC_URL}/buffIcons/heal2.png`,\n    `${PUBLIC_URL}/buffIcons/sge_buff.png`,\n    `${PUBLIC_URL}/buffIcons/sge_buff2.png`,\n    `${PUBLIC_URL}/buffIcons/war_buff.png`,\n    `${PUBLIC_URL}/buffIcons/whm_buff.png`,\n  ]);\n  const dynamisSrc = `${PUBLIC_URL}/debuffIcons/dynamis${\n    stacked['dynamis'] ? stacked['dynamis'] : ''\n  }.png`;\n  const dice1Src = `${PUBLIC_URL}/debuffIcons/dice1.png`;\n  const dice2Src = `${PUBLIC_URL}/debuffIcons/dice2.png`;\n  const hellWallNearSrc = `${PUBLIC_URL}/debuffIcons/hellwall_near.png`;\n  const hellWallFarSrc = `${PUBLIC_URL}/debuffIcons/hellwall_far.png`;\n  const psFarSrc = `${PUBLIC_URL}/debuffIcons/ps_far.png`;\n  const psNearSrc = `${PUBLIC_URL}/debuffIcons/ps_near.png`;\n  const damageIncreaseSrc = `${PUBLIC_URL}/debuffIcons/dmg_increase.png`;\n\n  useEffect(() => {\n    setInterval(() => {\n      setBuffSrcs((prevState) => prevState.sort(() => Math.random() - 0.5));\n    }, 4000);\n  }, []);\n\n  return (\n    <Container>\n      {stacked['dynamis'] > 0 && <img width=\"30px\" src={dynamisSrc} />}\n      {stacked['hellwallNear'] > 0 && (\n        <img width=\"30px\" src={hellWallNearSrc} />\n      )}\n      {stacked['hellwallFar'] > 0 && <img width=\"30px\" src={hellWallFarSrc} />}\n      {stacked['ps_far'] > 0 && <img width=\"30px\" src={psFarSrc} />}\n      {stacked['ps_near'] > 0 && <img width=\"30px\" src={psNearSrc} />}\n      {stacked['dmg_increase'] > 0 && (\n        <img width=\"30px\" src={damageIncreaseSrc} />\n      )}\n      {stacked['dice1'] > 0 && <img width=\"30px\" src={dice1Src} />}\n      {stacked['dice2'] > 0 && <img width=\"30px\" src={dice2Src} />}\n      {buffSrcs.map((n) => (\n        <img width=\"30px\" src={n} />\n      ))}\n    </Container>\n  );\n};\n\nexport default Debuffs;\n","import React from 'react';\nimport { Job } from '../../redux/slices/playerSlice';\nimport styled from 'styled-components';\nimport { PUBLIC_URL } from '../../env';\n\ninterface Props {\n  job: Job;\n}\n\nconst Container = styled.div``;\n\nconst JobIcon = ({ job }: Props) => {\n  const path = `${PUBLIC_URL}/jobIcons/${job}.png`;\n  return (\n    <Container>\n      <img height={50} width={50} src={path} />\n    </Container>\n  );\n};\n\nexport default JobIcon;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Player } from '../../redux/slices/playerSlice';\nimport Debuffs from './Debuffs';\nimport JobIcon from './JobIcon';\nimport { PUBLIC_URL } from '../../env';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 16px;\n  font-weight: bold;\n`;\nconst Name = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PlayerInfoContainer = styled.div`\n  min-width: 240px;\n`;\n\nconst NameContainer = styled.div`\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  padding: 0;\n`;\n\nconst HealthContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst HealthBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Bar = styled.div`\n  background-color: lightblue;\n  min-height: 4px;\n  min-width: 100px;\n`;\ninterface Props {\n  memberInfos: Player[];\n}\n\nconst Member = ({ memberInfos }: Props) => {\n  return (\n    <>\n      {memberInfos.map((member, i) => {\n        const { job, name, debuffs } = member;\n        return (\n          <Container key={`player_${member.name}_${i}`}>\n            <JobIcon job={job} />\n            <PlayerInfoContainer>\n              <NameContainer>\n                <img\n                  width=\"16px\"\n                  height=\"16px\"\n                  src={`${PUBLIC_URL}/partyIcons/${i + 1}.png`}\n                />\n                <Name>레벨 90 {name}</Name>\n              </NameContainer>\n              <HealthBarContainer>\n                <Bar />\n                <Bar />\n              </HealthBarContainer>\n              <HealthContainer>\n                <div>100020</div>\n                <div>100.00</div>\n              </HealthContainer>\n            </PlayerInfoContainer>\n            <Debuffs debuffs={debuffs} />\n          </Container>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Member;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport Member from './Member';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PartyList = () => {\n  const party = useSelector((state: RootState) => state.party);\n\n  return (\n    <Container>\n      <Member memberInfos={party.member} />\n    </Container>\n  );\n};\n\nexport default PartyList;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\n\nexport type Debuff =\n  | 'dynamis'\n  | 'hellwallFar'\n  | 'hellwallNear'\n  | 'dice1'\n  | 'dice2'\n  | 'ps_far'\n  | 'ps_near'\n  | 'line_green'\n  | 'line_blue'\n  | 'dmg_increase';\n\nexport type Job = 'pld' | 'war' | 'wht' | 'sch' | 'nin' | 'rpr' | 'mch' | 'sum';\n\nexport interface Player {\n  name: string;\n  job: Job;\n  debuffs: Debuff[];\n  isChained: boolean;\n  isNumbered: boolean;\n}\n\nexport interface PartyListState {\n  member: Player[];\n  chainedIndexes: number[];\n}\n\nconst initialState: PartyListState = {\n  chainedIndexes: [],\n  member: [\n    {\n      job: 'pld',\n      name: '재외국민',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n    {\n      job: 'war',\n      name: '세트메뉴',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n    {\n      job: 'wht',\n      name: '감자깎는토마토',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n    {\n      job: 'sch',\n      name: '유들',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n    {\n      job: 'rpr',\n      name: '깜쟝마리모',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n    {\n      job: 'nin',\n      name: '재규',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n    {\n      job: 'mch',\n      name: '악성마리모',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n    {\n      job: 'sum',\n      name: '찰떡돌',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n  ],\n};\n\nexport const partySlice = createSlice({\n  name: 'party',\n  initialState,\n  reducers: {\n    addDebuff: (\n      state,\n      action: PayloadAction<{ debuff: Debuff; target: number }>,\n    ) => {\n      const { target, debuff } = action.payload;\n      state.member[target].debuffs.push(debuff);\n    },\n    removeDebuff: (\n      state,\n      action: PayloadAction<{ debuff: Debuff; target: number }>,\n    ) => {\n      const { target, debuff } = action.payload;\n      const index = state.member[target].debuffs.indexOf(debuff);\n      if (state.member[target].debuffs.length > 0) {\n        state.member[target].debuffs.splice(index, 1);\n      }\n    },\n    removeAllHellwallDebuffs: (state) => {\n      state.member.forEach((n, i) => {\n        const hellwallFarIndex = state.member[i].debuffs.indexOf('hellwallFar');\n        const hellwallNearIndex =\n          state.member[i].debuffs.indexOf('hellwallNear');\n        if (n.debuffs.includes('hellwallFar')) {\n          state.member[i].debuffs.splice(hellwallFarIndex, 1);\n        }\n        if (n.debuffs.includes('hellwallNear')) {\n          state.member[i].debuffs.splice(hellwallNearIndex, 1);\n        }\n      });\n    },\n    removeAllTetherDebuffs: (state) => {\n      state.member.forEach((n, i) => {\n        const hellwallFarIndex = state.member[i].debuffs.indexOf('ps_far');\n        const hellwallNearIndex = state.member[i].debuffs.indexOf('ps_near');\n        if (n.debuffs.includes('ps_far')) {\n          state.member[i].debuffs.splice(hellwallFarIndex, 1);\n        }\n        if (n.debuffs.includes('ps_near')) {\n          state.member[i].debuffs.splice(hellwallNearIndex, 1);\n        }\n      });\n    },\n    removeAllDamageIncreaseDebuffs: (state) => {\n      state.member.forEach((n, i) => {\n        const dmgIncreaseIndex =\n          state.member[i].debuffs.indexOf('dmg_increase');\n\n        if (n.debuffs.includes('dmg_increase')) {\n          state.member[i].debuffs.splice(dmgIncreaseIndex, 1);\n        }\n      });\n    },\n    removeDiceHellwallDebuffs: (\n      state,\n      action: PayloadAction<{ dice: 'dice1' | 'dice2' }>,\n    ) => {\n      const { dice } = action.payload;\n      state.member.forEach((n, i) => {\n        const hellwallFarIndex = state.member[i].debuffs.indexOf('hellwallFar');\n        const hellwallNearIndex =\n          state.member[i].debuffs.indexOf('hellwallNear');\n        if (n.debuffs.includes('hellwallFar') && n.debuffs.includes(dice)) {\n          state.member[i].debuffs.splice(hellwallFarIndex, 1);\n        }\n        if (n.debuffs.includes('hellwallNear') && n.debuffs.includes(dice)) {\n          state.member[i].debuffs.splice(hellwallNearIndex, 1);\n        }\n      });\n    },\n    removeDiceDebuffs: (\n      state,\n      action: PayloadAction<{ dice: 'dice1' | 'dice2' }>,\n    ) => {\n      const { dice } = action.payload;\n      state.member.forEach((n, i) => {\n        const diceIndex = state.member[i].debuffs.indexOf(dice);\n        if (n.debuffs.includes(dice) && n.debuffs.includes(dice)) {\n          state.member[i].debuffs.splice(diceIndex, 1);\n        }\n      });\n    },\n    resetPlayer: (state, action: PayloadAction<{ players: Player[] }>) => {\n      const { players } = action.payload;\n      state.member = players;\n    },\n    updatePlayerButtonStatus: (\n      state,\n      action: PayloadAction<{\n        index: number;\n        isChained: boolean;\n        isNumbered: boolean;\n      }>,\n    ) => {\n      const { index, isChained, isNumbered } = action.payload;\n      state.member[index].isChained = isChained;\n      state.member[index].isNumbered = isNumbered;\n      if (isChained) {\n        state.chainedIndexes.push(index);\n      }\n    },\n\n    resetChainPlayer: (state) => {\n      state.chainedIndexes = [];\n      state.member = state.member.map((n) => {\n        return {\n          ...n,\n          isChained: false,\n          isNumbered: false,\n        };\n      });\n    },\n    addMultipleDebuffs: (\n      state,\n      action: PayloadAction<{ targetPlayers: Player[] }>,\n    ) => {\n      const { targetPlayers } = action.payload;\n      targetPlayers.forEach((n, i) => {\n        const target = state.member.findIndex((m) => m.name === n.name);\n        state.member[target].debuffs = [\n          ...n.debuffs,\n          ...state.member[target].debuffs,\n        ];\n      });\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  addDebuff,\n  addMultipleDebuffs,\n  removeDebuff,\n  removeAllHellwallDebuffs,\n  removeAllTetherDebuffs,\n  removeAllDamageIncreaseDebuffs,\n  removeDiceHellwallDebuffs,\n  removeDiceDebuffs,\n  updatePlayerButtonStatus,\n  resetChainPlayer,\n  resetPlayer,\n} = partySlice.actions;\n\nexport default partySlice.reducer;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { RootState } from '../../redux/store';\nimport {\n  Player,\n  resetChainPlayer,\n  updatePlayerButtonStatus,\n} from '../../redux/slices/playerSlice';\nimport { PUBLIC_URL } from '../../env';\n\nconst Container = styled.div`\n  display: flex;\n  position: absolute;\n  left: 440px;\n`;\n\nconst Marks = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Button = styled.button<{ isClicked?: boolean; color: string }>`\n  min-height: 50px;\n  min-width: 50px;\n  margin: 2px;\n  background: rgba(255, 255, 255, 0.16);\n  background-color: ${(props) => props.isClicked && props.color};\n  border-radius: 10px;\n  box-shadow: 0 0px 5px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(6.3px);\n  -webkit-backdrop-filter: blur(6.3px);\n  border: 1px solid rgba(255, 255, 255, 0.47);\n  &:hover {\n    border: 2px solid rgb(255, 238, 153);\n    box-shadow: 0 0px 30px rgb(255, 238, 153);\n  }\n  pointer-events: ${(props) => (props.isClicked ? 'none' : 'all')};\n`;\n\nconst MarkContainer = styled.div`\n  display: flex;\n`;\n\ntype MarkProps = {\n  index: number;\n  player: Player;\n};\n\ntype TButton = 'chain' | 'number';\n\nconst Mark = ({ index, player }: MarkProps) => {\n  const dispatch = useDispatch();\n  const chainIconSrc = `${PUBLIC_URL}/macroIcons/${\n    player.isNumbered || player.isChained ? 'disable' : 'chain'\n  }Marker.png`;\n  const numberIconSrc = `${PUBLIC_URL}/macroIcons/${\n    player.isNumbered || player.isChained ? 'disable' : 'number'\n  }Marker.png`;\n  const isButtonDisabled = player.isNumbered || player.isChained;\n  const onClickHandler = (clickBtnType: TButton, index: number) => {\n    dispatch(\n      updatePlayerButtonStatus({\n        index: index,\n        isChained: clickBtnType === 'chain',\n        isNumbered: clickBtnType === 'number',\n      }),\n    );\n  };\n\n  return (\n    <MarkContainer>\n      <Button\n        onClick={() => onClickHandler('chain', index)}\n        isClicked={player.isChained}\n        color=\"purple\"\n        disabled={isButtonDisabled}\n      >\n        <img width=\"30px\" src={chainIconSrc} />\n      </Button>\n      <Button\n        onClick={() => onClickHandler('number', index)}\n        isClicked={player.isNumbered}\n        color=\"lightyellow\"\n        disabled={isButtonDisabled}\n      >\n        <img width=\"30px\" src={numberIconSrc} />\n      </Button>\n    </MarkContainer>\n  );\n};\n\nconst ResetMark = ({ resetHandler }) => {\n  const resetIconSrc = `${PUBLIC_URL}/macroIcons/resetMarker.png`;\n  return (\n    <MarkContainer>\n      <Button onClick={resetHandler} isClicked={false} color=\"blue\">\n        <img width=\"30px\" src={resetIconSrc} />\n      </Button>\n    </MarkContainer>\n  );\n};\n\nconst Macros = () => {\n  const dispatch = useDispatch();\n  const { member } = useSelector((state: RootState) => state.party);\n\n  const buttonResetHandler = () => {\n    dispatch(resetChainPlayer());\n  };\n\n  return (\n    <Container>\n      <Marks>\n        {member &&\n          member.map((player, i) => {\n            return (\n              <Mark\n                key={`macro_${i}_${player.name}`}\n                index={i}\n                player={player}\n              />\n            );\n          })}\n        <ResetMark resetHandler={buttonResetHandler} />\n      </Marks>\n    </Container>\n  );\n};\n\nexport default Macros;\n","import React, { useEffect } from 'react';\nimport {\n  Debuff,\n  PartyListState,\n  Player,\n  addDebuff,\n  addMultipleDebuffs,\n  removeAllDamageIncreaseDebuffs,\n  removeAllHellwallDebuffs,\n  removeAllTetherDebuffs,\n  removeDiceDebuffs,\n  removeDiceHellwallDebuffs,\n} from '../redux/slices/playerSlice';\nimport { TPhase } from '../redux/slices/simulationSlice';\nimport { batch, useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../redux/store';\n\nconst getDynamisTargetPlayers = (\n  chainedIndexes: number[],\n  players: Player[],\n  fullPlayers: Player[],\n  phase: TPhase,\n) => {\n  const excludedPlayers = chainedIndexes.map((n, i) => {\n    if (phase === 'sigma') {\n      return (i === 0 || i === 2) && fullPlayers[n].name;\n    } else if (phase === 'omega1' || phase === 'omega2') {\n      return (i === 0 || i === 1) && fullPlayers[n].name;\n    } else {\n      return 'not included';\n    }\n  });\n  return players.filter((n) => !excludedPlayers.includes(n.name));\n};\n\nconst useDebuffGenerator = () => {\n  const dispatch = useDispatch();\n  const { member, chainedIndexes } = useSelector(\n    (state: RootState) => state.party,\n  );\n\n  useEffect(() => {}, [member, chainedIndexes]);\n\n  const generateRandomDynamis = (phase: TPhase) => {\n    const players = [...member];\n    const potentialTargets = [] as Player[];\n    //무조건 헬월 대상자 2명이 포함되어있어야한다.\n    const hellwallTargets = member\n      .filter((n) => {\n        if (\n          n.debuffs.includes('hellwallFar') ||\n          n.debuffs.includes('hellwallNear')\n        ) {\n          return true;\n        } else {\n          potentialTargets.push({ ...n, debuffs: [] });\n          return false;\n        }\n      })\n      .map((n) => {\n        return {\n          ...n,\n          debuffs: [],\n        };\n      });\n\n    const confirmedTargets = [...hellwallTargets];\n\n    const chooser = randomNoRepeats(\n      getDynamisTargetPlayers(chainedIndexes, potentialTargets, players, phase),\n    );\n\n    for (let i = 0; i < 4; i++) {\n      confirmedTargets.push(chooser());\n    }\n    return confirmedTargets;\n  };\n\n  const generateOmegaRandomDynamis = (phase: TPhase) => {\n    const players = [...member];\n    const potentialTargets = [] as Player[];\n    const dice = phase === 'omega1' ? 'dice1' : 'dice2';\n    //무조건 헬월 대상자 2명이 포함되어있어야한다.\n    const hellwallTargets = member\n      .filter((n) => {\n        if (\n          (n.debuffs.includes('hellwallFar') ||\n            n.debuffs.includes('hellwallNear')) &&\n          n.debuffs.includes(dice)\n        ) {\n          return true;\n        } else {\n          potentialTargets.push({ ...n, debuffs: [] });\n          return false;\n        }\n      })\n      .map((n) => {\n        return {\n          ...n,\n          debuffs: [],\n        };\n      });\n\n    const confirmedTargets = [...hellwallTargets];\n\n    const chooser = randomNoRepeats(\n      getDynamisTargetPlayers(chainedIndexes, potentialTargets, players, phase),\n    );\n\n    for (let i = 0; i < 4; i++) {\n      confirmedTargets.push(chooser());\n    }\n    return confirmedTargets;\n  };\n\n  const randomNoRepeats = (array) => {\n    var copy = array.slice(0);\n    return function () {\n      if (copy.length < 1) {\n        copy = array.slice(0);\n      }\n      var index = Math.floor(Math.random() * copy.length);\n      var item = copy[index];\n      copy.splice(index, 1);\n      return item;\n    };\n  };\n\n  const applyPSTether = () => {\n    const chooser = randomNoRepeats(['ps_far', 'ps_near']);\n    const psType = chooser();\n    const targets = member.map((n) => {\n      return {\n        ...n,\n        debuffs: [psType, 'dmg_increase'],\n      };\n    });\n    dispatch(addMultipleDebuffs({ targetPlayers: targets }));\n  };\n\n  const applyDamageIncrease = () => {\n    const targets = member.map((n) => {\n      return {\n        ...n,\n        debuffs: ['dmg_increase'],\n      };\n    });\n    dispatch(addMultipleDebuffs({ targetPlayers: targets as Player[] }));\n  };\n\n  const applyDynamis = (phase: TPhase) => {\n    const debuffedPlayers = generateRandomDynamis(phase).map((n) => {\n      return {\n        ...n,\n        debuffs: [...n.debuffs, 'dynamis'],\n      };\n    }) as Player[];\n    batch(() => {\n      dispatch(addMultipleDebuffs({ targetPlayers: debuffedPlayers }));\n      dispatch(removeAllHellwallDebuffs());\n    });\n  };\n\n  const applyOmegaDynamis = (phase: TPhase) => {\n    const debuffedPlayers = generateOmegaRandomDynamis(phase).map((n) => {\n      return {\n        ...n,\n        debuffs: [...n.debuffs, 'dynamis'],\n      };\n    }) as Player[];\n    batch(() => {\n      dispatch(addMultipleDebuffs({ targetPlayers: debuffedPlayers }));\n      dispatch(\n        removeDiceHellwallDebuffs({\n          dice: phase === 'omega1' ? 'dice1' : 'dice2',\n        }),\n      );\n      dispatch(\n        removeDiceDebuffs({ dice: phase === 'omega1' ? 'dice1' : 'dice2' }),\n      );\n    });\n  };\n\n  const generateRandomHellWall = (party: Player[], phase: TPhase) => {\n    const hellWallTargets = new Array();\n    const debuffCount = phase === 'omega1' ? 4 : 2;\n    const chooser = randomNoRepeats(party);\n    for (let i = 0; i < debuffCount; i++) {\n      hellWallTargets.push(chooser());\n    }\n    return hellWallTargets;\n  };\n\n  const applyHellwall = (phase: TPhase) => {\n    const targetPlayers = generateRandomHellWall(member, phase).map((n) => {\n      return { ...n, debuffs: [] };\n    }) as Player[];\n    const debuffedPlayers = targetPlayers.map((n, i) => {\n      const debuffs = [i % 2 === 0 ? 'hellwallFar' : 'hellwallNear'];\n      if (phase === 'omega1') {\n        debuffs.push(i < 2 ? 'dice1' : 'dice2');\n      }\n      return {\n        ...n,\n        debuffs: [...n.debuffs, ...(debuffs as Debuff[])],\n      };\n    });\n\n    dispatch(addMultipleDebuffs({ targetPlayers: debuffedPlayers }));\n  };\n\n  const removeHellwall = () => {\n    dispatch(removeAllHellwallDebuffs());\n  };\n  const removeTether = () => {\n    batch(() => {\n      dispatch(removeAllTetherDebuffs());\n      dispatch(removeAllDamageIncreaseDebuffs());\n    });\n  };\n\n  return {\n    applyHellwall,\n    applyDynamis,\n    applyDamageIncrease,\n    applyPSTether,\n    applyOmegaDynamis,\n    removeHellwall,\n    removeTether,\n  };\n};\n\nexport default useDebuffGenerator;\n","import useDebuffGenerator from './useDebuffGenerator';\nimport { useEffect, useState } from 'react';\nimport useCountDown from 'react-countdown-hook';\nimport useValidator from './useValidator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateAfter, updateBefore } from '../redux/slices/simulationSlice';\nimport { RootState } from '../redux/store';\n\ntype TPhaseStatus =\n  | 'idle'\n  | 'delta'\n  | 'deltaHellwall'\n  | 'sigma'\n  | 'sigmaHellwall'\n  | 'omega1'\n  | 'omega1Hellwall'\n  | 'omega2'\n  | 'omega2Hellwall'\n  | 'end';\n\nexport const phaseInitalTimes = {\n  delta: {\n    start: 10000,\n    end: 3500,\n  },\n  sigma: {\n    tether: {\n      start: 1000,\n      end: 2000,\n    },\n    start: 10000,\n    end: 4000,\n  },\n  omega1: {\n    start: 10000,\n    end: 3500,\n  },\n  omega2: {\n    start: 2000,\n    end: 3500,\n  },\n};\n\nexport type TSimulationResult = '평가중' | '성공' | '실패';\n\nconst usePhaseManager = () => {\n  const { delta, sigma, omega1, omega2 } = phaseInitalTimes;\n  const { party } = useSelector((state: RootState) => state);\n  const debuffGenerator = useDebuffGenerator();\n  const [phaseStatus, setPhaseStatus] = useState<TPhaseStatus>('idle');\n  const [simulationResult, setSimulationResult] =\n    useState<TSimulationResult>('평가중');\n  const [deltaTimeLeft, deltaCountdown] = useCountDown(delta.start);\n  const [deltaHellwallTimeLeft, deltaHellwallCountdown] = useCountDown(\n    delta.end,\n  );\n  const [sigmaTetherStartTimeLeft, sigmaTetherStartCountdown] = useCountDown(\n    sigma.tether.start,\n  );\n  const [sigmaTetherEndTimeLeft, sigmaTetherEndCountdown] = useCountDown(\n    sigma.tether.end,\n  );\n  const [sigmaTimeLeft, sigmaCountdown] = useCountDown(sigma.start);\n  const [sigmaHellwallTimeLeft, sigmaHellwallCountdown] = useCountDown(\n    sigma.end,\n  );\n  const [omega1TimeLeft, omega1Countdown] = useCountDown(omega1.start);\n  const [omega1HellwallTimeLeft, omega1HellwallCountdown] = useCountDown(\n    omega1.end,\n  );\n  const [omega2TimeLeft, omega2Countdown] = useCountDown(omega2.start);\n  const [omega2HellwallTimeLeft, omega2HellwallCountdown] = useCountDown(\n    omega2.end,\n  );\n\n  //Delta ========================\n  useEffect(() => {\n    if (deltaTimeLeft <= 0 && phaseStatus === 'delta') {\n      debuffGenerator.applyHellwall('delta');\n      setPhaseStatus('deltaHellwall');\n      deltaHellwallCountdown.start();\n    }\n  }, [deltaTimeLeft, phaseStatus]);\n\n  useEffect(() => {\n    if (deltaHellwallTimeLeft <= 0 && phaseStatus === 'deltaHellwall') {\n      debuffGenerator.applyDynamis('delta');\n      setPhaseStatus('sigma');\n      sigmaCountdown.start();\n    }\n  }, [deltaHellwallTimeLeft, phaseStatus]);\n\n  //Sigma ========================\n  useEffect(() => {\n    if (sigmaTimeLeft <= 0 && phaseStatus === 'sigma') {\n      debuffGenerator.applyHellwall('sigma');\n      setPhaseStatus('sigmaHellwall');\n      sigmaHellwallCountdown.start();\n      sigmaTetherStartCountdown.start();\n    }\n  }, [sigmaTimeLeft, phaseStatus]);\n\n  useEffect(() => {\n    if (sigmaTetherStartTimeLeft <= 0 && phaseStatus === 'sigmaHellwall') {\n      debuffGenerator.applyPSTether();\n      sigmaTetherEndCountdown.start();\n    }\n  }, [sigmaTetherStartTimeLeft, phaseStatus]);\n\n  useEffect(() => {\n    if (sigmaTetherEndTimeLeft <= 0 && phaseStatus === 'sigmaHellwall') {\n      debuffGenerator.removeTether();\n    }\n  }, [sigmaTetherEndTimeLeft, phaseStatus]);\n\n  useEffect(() => {\n    if (sigmaHellwallTimeLeft <= 0 && phaseStatus === 'sigmaHellwall') {\n      debuffGenerator.applyDynamis('sigma');\n      setPhaseStatus('omega1');\n      omega1Countdown.start();\n    }\n  }, [sigmaHellwallTimeLeft, phaseStatus]);\n\n  //Omega1 ========================\n  useEffect(() => {\n    if (omega1TimeLeft <= 0 && phaseStatus === 'omega1') {\n      debuffGenerator.applyHellwall('omega1');\n      setPhaseStatus('omega1Hellwall');\n      omega1HellwallCountdown.start();\n    }\n  }, [omega1TimeLeft, phaseStatus]);\n\n  useEffect(() => {\n    if (omega1HellwallTimeLeft <= 0 && phaseStatus === 'omega1Hellwall') {\n      debuffGenerator.applyOmegaDynamis('omega1');\n      setPhaseStatus('omega2');\n      omega2Countdown.start();\n    }\n  }, [omega1HellwallTimeLeft, phaseStatus]);\n\n  //Omega2 ========================\n  useEffect(() => {\n    if (omega2TimeLeft <= 0 && phaseStatus === 'omega2') {\n      setPhaseStatus('omega2Hellwall');\n      omega2HellwallCountdown.start();\n    }\n  }, [omega2TimeLeft, phaseStatus]);\n\n  useEffect(() => {\n    if (omega2HellwallTimeLeft <= 0 && phaseStatus === 'omega2Hellwall') {\n      debuffGenerator.applyOmegaDynamis('omega2');\n      setPhaseStatus('end');\n    }\n  }, [omega2HellwallTimeLeft, phaseStatus]);\n\n  useEffect(() => {\n    if (phaseStatus === 'end') {\n      const isSuccess =\n        party.member.filter((n) => n.debuffs.length === 3).length === 8;\n      setSimulationResult(isSuccess ? '성공' : '실패');\n    }\n  }, [phaseStatus]);\n\n  const startDeltaPhase = () => {\n    setPhaseStatus('delta');\n    deltaCountdown.start();\n  };\n  const startSigmaPhase = () => {\n    setPhaseStatus('sigma');\n    sigmaCountdown.start();\n  };\n  const startOmega1Phase = () => {\n    setPhaseStatus('omega1');\n    omega1Countdown.start();\n  };\n  const startOmega2Phase = () => {\n    setPhaseStatus('omega2');\n    omega2Countdown.start();\n  };\n\n  return {\n    timer: {\n      deltaTimeLeft,\n      deltaHellwallTimeLeft,\n      sigmaTimeLeft,\n      sigmaHellwallTimeLeft,\n      omega1TimeLeft,\n      omega1HellwallTimeLeft,\n      omega2TimeLeft,\n      omega2HellwallTimeLeft,\n    },\n    simulationResult,\n    startDeltaPhase,\n    startSigmaPhase,\n    startOmega1Phase,\n    startOmega2Phase,\n  };\n};\n\nexport default usePhaseManager;\n","import React from 'react';\nimport styled from 'styled-components';\nimport usePhaseManager, {\n  TSimulationResult,\n  phaseInitalTimes,\n} from '../hooks/usePhaseManager';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\n\nconst Container = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n`;\n\nconst TimerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Timer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst Time = styled.div`\n  text-align: center;\n  font-weight: bold;\n  font-size: 120px;\n`;\nconst Prefix = styled.div`\n  text-align: center;\n  font-weight: bold;\n  font-size: 32px;\n`;\nconst Suffix = styled.div`\n  text-align: center;\n  font-weight: bold;\n  font-size: 32px;\n`;\nconst Result = styled.div<{ simulationResult: TSimulationResult }>`\n  text-align: center;\n  font-size: 80px;\n  font-weight: bold;\n  color: ${(props) => (props.simulationResult === '성공' ? 'green' : 'red')};\n`;\n\ninterface Props {\n  timer: {\n    deltaTimeLeft: number;\n    deltaHellwallTimeLeft: number;\n    sigmaTimeLeft: number;\n    sigmaHellwallTimeLeft: number;\n    omega1TimeLeft: number;\n    omega1HellwallTimeLeft: number;\n    omega2TimeLeft: number;\n    omega2HellwallTimeLeft: number;\n  };\n  simulationResult: TSimulationResult;\n}\n\nconst PhaseTimers = ({ timer, simulationResult }: Props) => {\n  const { delta, sigma, omega1, omega2 } = phaseInitalTimes;\n  const showDeltaTimer = timer.deltaTimeLeft > 0;\n  const showDeltaHellwallTimer = timer.deltaHellwallTimeLeft > 0;\n  const showSigmaTimer = timer.sigmaTimeLeft > 0;\n  const showSigmaHellwallTimer = timer.sigmaHellwallTimeLeft > 0;\n  const showOmega1Timer = timer.omega1TimeLeft > 0;\n  const showOmega1HellwallTimer = timer.omega1HellwallTimeLeft > 0;\n  const showOmega2Timer = timer.omega2TimeLeft > 0;\n  const showOmega2HellwallTimer = timer.omega2HellwallTimeLeft > 0;\n  return (\n    <Container>\n      <TimerContainer>\n        {simulationResult === '성공' && (\n          <Result simulationResult={simulationResult}>\n            {simulationResult}!!!\n          </Result>\n        )}\n        {simulationResult === '실패' && (\n          <Result simulationResult={simulationResult}>\n            {simulationResult}...\n          </Result>\n        )}\n        {showDeltaTimer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={delta.start / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>헬로월드 부여</Prefix>\n                  <Time>{timer.deltaTimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n        {showDeltaHellwallTimer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={delta.end / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>뒤나미스 시전</Prefix>\n                  <Time>{timer.deltaHellwallTimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n        {showSigmaTimer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={sigma.start / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>헬로월드 시전</Prefix>\n                  <Time>{timer.sigmaTimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n        {showSigmaHellwallTimer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={sigma.end / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>뒤나미스 시전</Prefix>\n                  <Time>{timer.sigmaHellwallTimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n        {showOmega1Timer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={omega1.start / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>헬로월드 시전</Prefix>\n                  <Time>{timer.omega1TimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n        {showOmega1HellwallTimer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={omega1.end / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>뒤나미스 시전</Prefix>\n                  <Time>{timer.omega1HellwallTimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n        {showOmega2Timer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={omega2.start / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>헬로월드 시전</Prefix>\n                  <Time>{timer.omega2TimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n        {showOmega2HellwallTimer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={omega2.end / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>뒤나미스 시전</Prefix>\n                  <Time>{timer.omega2HellwallTimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n      </TimerContainer>\n    </Container>\n  );\n};\n\nexport default PhaseTimers;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport PartyList from '../components/PartyList';\nimport Macros from '../components/PartyList/Macros';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../redux/store';\nimport usePhaseManager from '../hooks/usePhaseManager';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport PhaseTimers from '../components/PhaseTimers';\n\nconst Container = styled.main`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Button = styled.button`\n  min-height: 150px;\n  min-width: 150px;\n  margin: 2px;\n  background: rgba(255, 255, 255, 0.16);\n  font-size: 32px;\n  border-radius: 10px;\n  box-shadow: 0 0px 5px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(6.3px);\n  -webkit-backdrop-filter: blur(6.3px);\n  border: 1px solid rgba(255, 255, 255, 0.47);\n  &:hover {\n    border: 2px solid rgb(255, 238, 153);\n    box-shadow: 0 0px 30px rgb(255, 238, 153);\n  }\n`;\n\nconst PartyContainer = styled.div`\n  display: flex;\n`;\n\nconst ControlButtonContainer = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  width: 100px;\n  left: 0;\n  bottom: 0;\n`;\n\nconst RuleContainer = styled.div`\n  position: absolute;\n  font-size: 10px;\n  right: 0;\n  bottom: 0;\n`;\n\nexport default function Sigma() {\n  const phaseManager = usePhaseManager();\n  const [isStartButtonClicked, setIsStartButtonClicked] = useState(false);\n  const onClickStartSimulation = () => {\n    phaseManager.startDeltaPhase();\n    setIsStartButtonClicked(!isStartButtonClicked);\n  };\n  const onClickResetSimulation = () => {\n    window.location.reload();\n  };\n\n  return (\n    <Container className=\"App\">\n      <PartyContainer>\n        <PartyList />\n        <Macros />\n      </PartyContainer>\n      <ControlButtonContainer>\n        {isStartButtonClicked ? (\n          <Button onClick={onClickResetSimulation}>다시시작</Button>\n        ) : (\n          <Button onClick={onClickStartSimulation}>시작</Button>\n        )}\n      </ControlButtonContainer>\n\n      <PhaseTimers\n        timer={phaseManager.timer}\n        simulationResult={phaseManager.simulationResult}\n      />\n      <RuleContainer>\n        <div>\n          <b>델타</b>\n          <p>델타 페이즈에서는 특별히 할것이 없습니다.</p>\n        </div>\n        <div>\n          <b>시그마</b>\n          <p>숙박징 1번과 3번은 뒤나미스 디버프를 부여 받지 않습니다.</p>\n        </div>\n        <div>\n          <b>오메가1</b>\n          <p>숙박징 1번과 2번은 뒤나미스 디버프를 부여 받지 않습니다.</p>\n        </div>\n        <div>\n          <b>오메가2</b>\n          <p>숙박징 1번과 2번은 뒤나미스 디버프를 부여 받지 않습니다.</p>\n        </div>\n        <div>\n          <b>결과</b>\n          <p>모두가 뒤나미스 3스택으로 마무리 되어야 성공합니다.</p>\n        </div>\n      </RuleContainer>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './routes/Home';\n\nexport default function Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n    </Switch>\n  );\n}\n","// sizes for media queries\nconst sizes = {\n  giant: 1080,\n  desktop: 922,\n  tablet: 768,\n  phone: 576,\n};\n\nexport const fontSize = {\n  smallFontSize: '9px',\n  normalFontSize: '12px',\n  largeFontSize: '15px',\n};\n\nexport const websiteTitle = 'react-typescript-template';\n\nexport const color = {\n  darkmode: {\n    bgColor: '#14181C',\n    fontColor: '#ffffff',\n    mainColor: '#f6e58d',\n  },\n  default: {\n    bgColor: '#efefef',\n    fontColor: '#14181C',\n    mainColor: '#f6e58d',\n  },\n};\n\nexport const themeList = {\n  light: {\n    body: '#E2E2E2',\n    text: '#363537',\n    toggleBorder: '#FFF',\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\n  },\n  dark: {\n    body: '#363537',\n    text: '#FAFAFA',\n    toggleBorder: '#6B8096',\n    gradient: 'linear-gradient(#091236, #1E215D)',\n  },\n};\n\nconst customMediaQuery = (maxWidth: number) =>\n  `@media (max-width: ${maxWidth}px)`;\n\nexport const media: any = {\n  custom: customMediaQuery,\n  desktop: customMediaQuery(sizes.desktop),\n  tablet: customMediaQuery(sizes.tablet),\n  phone: customMediaQuery(sizes.phone),\n};\n","import { createGlobalStyle } from 'styled-components';\nimport { fontSize, color, media } from './config/_mixin';\nimport { IThemeInterface } from './interfaces';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nexport const GlobalStyle = createGlobalStyle<IThemeInterface>`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n\n  #root{\n    height:100%;\n  }\n  \n\n  body{\n    padding: 30px;\n    font-family: 'Nanum Gothic', sans-serif;\n    font-size: ${fontSize.normalFontSize};\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    height: 100%;\n    width:100%;\n    transition: background 0.5s ease-in-out;\n    transition: color 0.5s ease-in-out;\n\n    /* Responsive Design */\n    ${media.giant} {\n      /* Giant View */\n    }\n    ${media.desktop} {\n      /* Desktop View */\n    }\n    ${media.tablet} {\n      /* Tablet View */\n    }\n    ${media.phone} {\n      /* Phone View */\n    }\n  }\n\n  a{\n    text-decoration: none !important;\n    &:hover{\n        color: ${color.default.mainColor};\n    }\n  }\n\n  button{\n    cursor: pointer;\n    background-color: white;\n    outline: none;\n    border: none;\n    &:active {\n    }\n  }\n\n  /* animations */\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  @keyframes fadeIn {\n    0%{\n      opacity: 0;\n    }\n    100%{\n      opacity: 1;\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop({ children }) {\n  const { pathname } = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return children;\n}\n","export interface User {\n  id: string;\n  password: string;\n  username: string;\n}\n\nexport interface IThemeInterface {\n  theme: { body: string; text: string };\n}\n\nexport enum Theme {\n  DARK,\n  LIGHT,\n}\n","import React, { createContext } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { BackTop } from 'antd';\nimport { ToastContainer } from 'react-toastify';\nimport Router from './Router';\nimport { GlobalStyle } from './global-styles';\nimport ScrollToTop from './components/ScrollToTop';\nimport { Theme } from './interfaces';\nimport { themeList } from './config/_mixin';\nimport useDarkMode from './hooks/useDarkMode';\n\nexport const ThemeContext = createContext<{\n  theme: Theme;\n  toggleTheme: () => void;\n}>({\n  theme: Theme.LIGHT,\n  toggleTheme: () => {\n    console.error(\n      '[react-typescript-boilerplate] you should set { theme, toggleTheme } value with useDarkMode(...)',\n    );\n    return null;\n  },\n});\n\nexport default function App() {\n  const { theme, toggleTheme } = useDarkMode(Theme.LIGHT);\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      <GlobalStyle\n        theme={theme === Theme.LIGHT ? themeList.light : themeList.dark}\n      />\n      <ToastContainer\n        draggable={true}\n        position={'bottom-right'}\n        autoClose={5000}\n        pauseOnHover={true}\n      />\n      <BrowserRouter basename=\"/theOmegaProtocal\">\n        <ScrollToTop>\n          <BackTop />\n          <Router />\n        </ScrollToTop>\n      </BrowserRouter>\n    </ThemeContext.Provider>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { Theme } from '../interfaces';\n\nconst THEME_KEY = 'theme';\n\nexport default function useDarkMode(defaultTheme: Theme.LIGHT) {\n  const [theme, setTheme] = useState<Theme>(defaultTheme);\n  const toggleTheme = () => {\n    if (theme === Theme.LIGHT) {\n      window.localStorage.setItem(THEME_KEY, JSON.stringify(Theme.DARK));\n      setTheme(Theme.DARK);\n    } else {\n      window.localStorage.setItem(THEME_KEY, JSON.stringify(Theme.LIGHT));\n      setTheme(Theme.LIGHT);\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem(THEME_KEY);\n    if (localTheme !== null) {\n      setTheme(JSON.parse(localTheme));\n    }\n  }, []);\n\n  return { theme, toggleTheme };\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\nimport { Debuff, Player } from './playerSlice';\n\nexport type TPhase = 'delta' | 'sigma' | 'omega1' | 'omega2';\n\nexport interface SimulationState {\n  history: {\n    [key: string]: {\n      before: {\n        member?: Player[];\n        chainedIndexes?: number[];\n      };\n      after: {\n        member?: Player[];\n        chainedIndexes?: number[];\n      };\n    };\n  };\n}\n\nconst initialState: SimulationState = {\n  history: {\n    delta: { before: {}, after: {} },\n    sigma: { before: {}, after: {} },\n    omega1: { before: {}, after: {} },\n    omega2: { before: {}, after: {} },\n  },\n};\n\nexport const simulationSlice = createSlice({\n  name: 'simulation',\n  initialState,\n  reducers: {\n    updateBefore: (\n      state,\n      action: PayloadAction<{\n        phase: TPhase;\n        member: Player[];\n        chainedIndexes: number[];\n      }>,\n    ) => {\n      const { phase, member, chainedIndexes } = action.payload;\n      state.history[phase].before = {\n        member,\n        chainedIndexes,\n      };\n    },\n    updateAfter: (\n      state,\n      action: PayloadAction<{\n        phase: TPhase;\n        member: Player[];\n        chainedIndexes: number[];\n      }>,\n    ) => {\n      const { phase, member, chainedIndexes } = action.payload;\n      state.history[phase].after = {\n        member,\n        chainedIndexes,\n      };\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { updateAfter, updateBefore } = simulationSlice.actions;\n\nexport default simulationSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport partyReducer from './slices/playerSlice';\nimport simulationReducer from './slices/simulationSlice';\n\nexport const store = configureStore({\n  reducer: { party: partyReducer, simulation: simulationReducer },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}