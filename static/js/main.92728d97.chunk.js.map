{"version":3,"sources":["env.ts","components/PartyList/Debuffs.tsx","components/PartyList/JobIcon.tsx","components/PartyList/Member.tsx","components/PartyList/index.tsx","redux/slices/playerSlice.ts","components/PartyList/Macros.tsx","hooks/useDebuffGenerator.tsx","hooks/usePhaseManager.tsx","components/PhaseTimers.tsx","routes/Home.tsx","Router.tsx","config/_mixin.tsx","global-styles.ts","components/ScrollToTop.tsx","interfaces.ts","App.tsx","hooks/useDarkMode.tsx","redux/slices/simulationSlice.ts","redux/store.ts","index.tsx"],"names":["PUBLIC_URL","process","Container","styled","div","_templateObject","_taggedTemplateLiteral","Debuffs","_ref","stacked","debuffs","reduce","prev","curr","getStackedDebuffs","dynamisSrc","concat","dice1Src","dice2Src","hellWallNearSrc","hellWallFarSrc","React","createElement","width","src","JobIcon","job","path","height","Name","_templateObject2","PlayerInfoContainer","_templateObject3","NameContainer","_templateObject4","HealthContainer","_templateObject5","HealthBarContainer","_templateObject6","Bar","_templateObject7","Member","memberInfos","Fragment","map","member","i","name","key","PartyList","party","useSelector","state","partySlice","createSlice","initialState","chainedIndexes","isChained","isNumbered","reducers","addDebuff","action","_action$payload","payload","target","debuff","push","removeDebuff","_action$payload2","index","indexOf","length","splice","removeAllHellwallDebuffs","forEach","n","hellwallFarIndex","hellwallNearIndex","includes","removeDiceHellwallDebuffs","dice","removeDiceDebuffs","diceIndex","resetPlayer","players","updatePlayerButtonStatus","_action$payload3","resetChainPlayer","_objectSpread","addMultipleDebuffs","targetPlayers","findIndex","m","_toConsumableArray","_partySlice$actions","actions","Marks","Button","button","props","isClicked","color","MarkContainer","Mark","player","dispatch","useDispatch","chainIconSrc","numberIconSrc","isButtonDisabled","onClickHandler","clickBtnType","onClick","disabled","ResetMark","_ref2","resetHandler","resetIconSrc","Macros","getDynamisTargetPlayers","fullPlayers","phase","excludedPlayers","filter","useDebuffGenerator","_useSelector","useEffect","randomNoRepeats","array","copy","slice","Math","floor","random","item","applyHellwall","debuffedPlayers","hellWallTargets","Array","debuffCount","chooser","generateRandomHellWall","applyDynamis","potentialTargets","hellwallTargets","confirmedTargets","generateRandomDynamis","batch","applyOmegaDynamis","generateOmegaRandomDynamis","removeHellwall","phaseInitalTimes","start","end","usePhaseManager","delta","sigma","omega1","omega2","debuffGenerator","_useState","useState","_useState2","_slicedToArray","phaseStatus","setPhaseStatus","_useState3","_useState4","simulationResult","setSimulationResult","_useCountDown","useCountDown","_useCountDown2","deltaTimeLeft","deltaCountdown","_useCountDown3","_useCountDown4","deltaHellwallTimeLeft","deltaHellwallCountdown","_useCountDown5","_useCountDown6","sigmaTimeLeft","sigmaCountdown","_useCountDown7","_useCountDown8","sigmaHellwallTimeLeft","sigmaHellwallCountdown","_useCountDown9","_useCountDown10","omega1TimeLeft","omega1Countdown","_useCountDown11","_useCountDown12","omega1HellwallTimeLeft","omega1HellwallCountdown","_useCountDown13","_useCountDown14","omega2TimeLeft","omega2Countdown","_useCountDown15","_useCountDown16","omega2HellwallTimeLeft","omega2HellwallCountdown","isSuccess","timer","startDeltaPhase","startSigmaPhase","startOmega1Phase","startOmega2Phase","TimerContainer","Timer","Time","Prefix","Suffix","Result","PhaseTimers","showDeltaTimer","showDeltaHellwallTimer","showSigmaTimer","showSigmaHellwallTimer","showOmega1Timer","showOmega1HellwallTimer","showOmega2Timer","showOmega2HellwallTimer","CountdownCircleTimer","isPlaying","duration","colors","colorsTime","strokeWidth","size","remainingTime","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","main","PartyContainer","ControlButtonContainer","RuleContainer","Sigma","phaseManager","isStartButtonClicked","setIsStartButtonClicked","className","window","location","reload","Router","Switch","Route","component","Home","sizes","themeList","light","body","text","toggleBorder","gradient","dark","customMediaQuery","maxWidth","media","custom","desktop","tablet","phone","GlobalStyle","createGlobalStyle","theme","giant","ScrollToTop","children","pathname","useLocation","scrollTo","Theme","ThemeContext","createContext","LIGHT","toggleTheme","console","error","App","_useDarkMode","defaultTheme","setTheme","localTheme","localStorage","getItem","JSON","parse","setItem","stringify","DARK","useDarkMode","Provider","value","ToastContainer","draggable","position","autoClose","pauseOnHover","BrowserRouter","basename","BackTop","simulationSlice","history","before","after","updateBefore","updateAfter","_simulationSlice$acti","store","configureStore","reducer","partyReducer","simulation","simulationReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92728d97.chunk.js","sourcesContent":["export const PUBLIC_URL = process.env.PUBLIC_URL;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Debuff } from '../../redux/slices/playerSlice';\nimport { PUBLIC_URL } from '../../env';\n\nconst Container = styled.div``;\n\nconst getStackedDebuffs = (debuffs: Debuff[]) => {\n  const stacked = debuffs.reduce(function (prev, curr) {\n    prev[curr] = (prev[curr] || 0) + 1;\n    return prev;\n  }, {});\n  return stacked;\n};\n\ninterface Props {\n  debuffs: Debuff[];\n}\n\nconst Debuffs = ({ debuffs }: Props) => {\n  const stacked = getStackedDebuffs(debuffs);\n  const dynamisSrc = `${PUBLIC_URL}/debuffIcons/dynamis${\n    stacked['dynamis'] ? stacked['dynamis'] : ''\n  }.png`;\n  const dice1Src = `${PUBLIC_URL}/debuffIcons/dice1.png`;\n  const dice2Src = `${PUBLIC_URL}/debuffIcons/dice2.png`;\n  const hellWallNearSrc = `${PUBLIC_URL}/debuffIcons/hellwall_near.png`;\n  const hellWallFarSrc = `${PUBLIC_URL}/debuffIcons/hellwall_far.png`;\n  return (\n    <Container>\n      {stacked['dynamis'] > 0 && <img width=\"30px\" src={dynamisSrc} />}\n      {stacked['hellwallNear'] > 0 && (\n        <img width=\"30px\" src={hellWallNearSrc} />\n      )}\n      {stacked['hellwallFar'] > 0 && <img width=\"30px\" src={hellWallFarSrc} />}\n      {stacked['dice1'] > 0 && <img width=\"30px\" src={dice1Src} />}\n      {stacked['dice2'] > 0 && <img width=\"30px\" src={dice2Src} />}\n    </Container>\n  );\n};\n\nexport default Debuffs;\n","import React from 'react';\nimport { Job } from '../../redux/slices/playerSlice';\nimport styled from 'styled-components';\nimport { PUBLIC_URL } from '../../env';\n\ninterface Props {\n  job: Job;\n}\n\nconst Container = styled.div``;\n\nconst JobIcon = ({ job }: Props) => {\n  const path = `${PUBLIC_URL}/jobIcons/${job}.png`;\n  return (\n    <Container>\n      <img height={50} width={50} src={path} />\n    </Container>\n  );\n};\n\nexport default JobIcon;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Player } from '../../redux/slices/playerSlice';\nimport Debuffs from './Debuffs';\nimport JobIcon from './JobIcon';\nimport { PUBLIC_URL } from '../../env';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: 16px;\n  font-weight: bold;\n`;\nconst Name = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PlayerInfoContainer = styled.div`\n  min-width: 240px;\n`;\n\nconst NameContainer = styled.div`\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  padding: 0;\n`;\n\nconst HealthContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst HealthBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Bar = styled.div`\n  background-color: lightblue;\n  min-height: 4px;\n  min-width: 100px;\n`;\ninterface Props {\n  memberInfos: Player[];\n}\n\nconst Member = ({ memberInfos }: Props) => {\n  return (\n    <>\n      {memberInfos.map((member, i) => {\n        const { job, name, debuffs } = member;\n        return (\n          <Container key={`player_${member.name}_${i}`}>\n            <JobIcon job={job} />\n            <PlayerInfoContainer>\n              <NameContainer>\n                <img\n                  width=\"16px\"\n                  height=\"16px\"\n                  src={`${PUBLIC_URL}/partyIcons/${i + 1}.png`}\n                />\n                <Name>레벨 90 {name}</Name>\n              </NameContainer>\n              <HealthBarContainer>\n                <Bar />\n                <Bar />\n              </HealthBarContainer>\n              <HealthContainer>\n                <div>100020</div>\n                <div>100.00</div>\n              </HealthContainer>\n            </PlayerInfoContainer>\n            <Debuffs debuffs={debuffs} />\n          </Container>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Member;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../redux/store';\nimport Member from './Member';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PartyList = () => {\n  const party = useSelector((state: RootState) => state.party);\n\n  return (\n    <Container>\n      <Member memberInfos={party.member} />\n    </Container>\n  );\n};\n\nexport default PartyList;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\n\nexport type Debuff =\n  | 'dynamis'\n  | 'hellwallFar'\n  | 'hellwallNear'\n  | 'dice1'\n  | 'dice2';\n\nexport type Job = 'pld' | 'war' | 'wht' | 'sch' | 'nin' | 'rpr' | 'mch' | 'sum';\n\nexport interface Player {\n  name: string;\n  job: Job;\n  debuffs: Debuff[];\n  isChained: boolean;\n  isNumbered: boolean;\n}\n\nexport interface PartyListState {\n  member: Player[];\n  chainedIndexes: number[];\n}\n\nconst initialState: PartyListState = {\n  chainedIndexes: [],\n  member: [\n    {\n      job: 'pld',\n      name: '재외국민',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n    {\n      job: 'war',\n      name: '세트메뉴',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n    {\n      job: 'wht',\n      name: '감자깎는토마토',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n    {\n      job: 'sch',\n      name: '유들',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n    {\n      job: 'rpr',\n      name: '깜쟝마리모',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n    {\n      job: 'nin',\n      name: '재규',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n    {\n      job: 'mch',\n      name: '악성마리모',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n    {\n      job: 'sum',\n      name: '찰떡돌',\n      debuffs: [],\n      isChained: false,\n      isNumbered: false,\n    },\n  ],\n};\n\nexport const partySlice = createSlice({\n  name: 'party',\n  initialState,\n  reducers: {\n    addDebuff: (\n      state,\n      action: PayloadAction<{ debuff: Debuff; target: number }>,\n    ) => {\n      const { target, debuff } = action.payload;\n      state.member[target].debuffs.push(debuff);\n    },\n    removeDebuff: (\n      state,\n      action: PayloadAction<{ debuff: Debuff; target: number }>,\n    ) => {\n      const { target, debuff } = action.payload;\n      const index = state.member[target].debuffs.indexOf(debuff);\n      if (state.member[target].debuffs.length > 0) {\n        state.member[target].debuffs.splice(index, 1);\n      }\n    },\n    removeAllHellwallDebuffs: (state) => {\n      state.member.forEach((n, i) => {\n        const hellwallFarIndex = state.member[i].debuffs.indexOf('hellwallFar');\n        const hellwallNearIndex =\n          state.member[i].debuffs.indexOf('hellwallNear');\n        if (n.debuffs.includes('hellwallFar')) {\n          state.member[i].debuffs.splice(hellwallFarIndex, 1);\n        }\n        if (n.debuffs.includes('hellwallNear')) {\n          state.member[i].debuffs.splice(hellwallNearIndex, 1);\n        }\n      });\n    },\n    removeDiceHellwallDebuffs: (\n      state,\n      action: PayloadAction<{ dice: 'dice1' | 'dice2' }>,\n    ) => {\n      const { dice } = action.payload;\n      state.member.forEach((n, i) => {\n        const hellwallFarIndex = state.member[i].debuffs.indexOf('hellwallFar');\n        const hellwallNearIndex =\n          state.member[i].debuffs.indexOf('hellwallNear');\n        if (n.debuffs.includes('hellwallFar') && n.debuffs.includes(dice)) {\n          state.member[i].debuffs.splice(hellwallFarIndex, 1);\n        }\n        if (n.debuffs.includes('hellwallNear') && n.debuffs.includes(dice)) {\n          state.member[i].debuffs.splice(hellwallNearIndex, 1);\n        }\n      });\n    },\n    removeDiceDebuffs: (\n      state,\n      action: PayloadAction<{ dice: 'dice1' | 'dice2' }>,\n    ) => {\n      const { dice } = action.payload;\n      state.member.forEach((n, i) => {\n        const diceIndex = state.member[i].debuffs.indexOf(dice);\n        if (n.debuffs.includes(dice) && n.debuffs.includes(dice)) {\n          state.member[i].debuffs.splice(diceIndex, 1);\n        }\n      });\n    },\n    resetPlayer: (state, action: PayloadAction<{ players: Player[] }>) => {\n      const { players } = action.payload;\n      state.member = players;\n    },\n    updatePlayerButtonStatus: (\n      state,\n      action: PayloadAction<{\n        index: number;\n        isChained: boolean;\n        isNumbered: boolean;\n      }>,\n    ) => {\n      const { index, isChained, isNumbered } = action.payload;\n      state.member[index].isChained = isChained;\n      state.member[index].isNumbered = isNumbered;\n      if (isChained) {\n        state.chainedIndexes.push(index);\n      }\n    },\n\n    resetChainPlayer: (state) => {\n      state.chainedIndexes = [];\n      state.member = state.member.map((n) => {\n        return {\n          ...n,\n          isChained: false,\n          isNumbered: false,\n        };\n      });\n    },\n    addMultipleDebuffs: (\n      state,\n      action: PayloadAction<{ targetPlayers: Player[] }>,\n    ) => {\n      const { targetPlayers } = action.payload;\n      targetPlayers.forEach((n, i) => {\n        const target = state.member.findIndex((m) => m.name === n.name);\n        state.member[target].debuffs = [\n          ...n.debuffs,\n          ...state.member[target].debuffs,\n        ];\n      });\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  addDebuff,\n  addMultipleDebuffs,\n  removeDebuff,\n  removeAllHellwallDebuffs,\n  removeDiceHellwallDebuffs,\n  removeDiceDebuffs,\n  updatePlayerButtonStatus,\n  resetChainPlayer,\n  resetPlayer,\n} = partySlice.actions;\n\nexport default partySlice.reducer;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { RootState } from '../../redux/store';\nimport {\n  Player,\n  resetChainPlayer,\n  updatePlayerButtonStatus,\n} from '../../redux/slices/playerSlice';\nimport { PUBLIC_URL } from '../../env';\n\nconst Container = styled.div`\n  display: flex;\n  position: absolute;\n  left: 440px;\n`;\n\nconst Marks = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Button = styled.button<{ isClicked?: boolean; color: string }>`\n  min-height: 50px;\n  min-width: 50px;\n  margin: 2px;\n  background: rgba(255, 255, 255, 0.16);\n  background-color: ${(props) => props.isClicked && props.color};\n  border-radius: 10px;\n  box-shadow: 0 0px 5px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(6.3px);\n  -webkit-backdrop-filter: blur(6.3px);\n  border: 1px solid rgba(255, 255, 255, 0.47);\n  &:hover {\n    border: 2px solid rgb(255, 238, 153);\n    box-shadow: 0 0px 30px rgb(255, 238, 153);\n  }\n  pointer-events: ${(props) => (props.isClicked ? 'none' : 'all')};\n`;\n\nconst MarkContainer = styled.div`\n  display: flex;\n`;\n\ntype MarkProps = {\n  index: number;\n  player: Player;\n};\n\ntype TButton = 'chain' | 'number';\n\nconst Mark = ({ index, player }: MarkProps) => {\n  const dispatch = useDispatch();\n  const chainIconSrc = `${PUBLIC_URL}/macroIcons/${\n    player.isNumbered || player.isChained ? 'disable' : 'chain'\n  }Marker.png`;\n  const numberIconSrc = `${PUBLIC_URL}/macroIcons/${\n    player.isNumbered || player.isChained ? 'disable' : 'number'\n  }Marker.png`;\n  const isButtonDisabled = player.isNumbered || player.isChained;\n  const onClickHandler = (clickBtnType: TButton, index: number) => {\n    dispatch(\n      updatePlayerButtonStatus({\n        index: index,\n        isChained: clickBtnType === 'chain',\n        isNumbered: clickBtnType === 'number',\n      }),\n    );\n  };\n\n  return (\n    <MarkContainer>\n      <Button\n        onClick={() => onClickHandler('chain', index)}\n        isClicked={player.isChained}\n        color=\"purple\"\n        disabled={isButtonDisabled}\n      >\n        <img width=\"30px\" src={chainIconSrc} />\n      </Button>\n      <Button\n        onClick={() => onClickHandler('number', index)}\n        isClicked={player.isNumbered}\n        color=\"lightyellow\"\n        disabled={isButtonDisabled}\n      >\n        <img width=\"30px\" src={numberIconSrc} />\n      </Button>\n    </MarkContainer>\n  );\n};\n\nconst ResetMark = ({ resetHandler }) => {\n  const resetIconSrc = `${PUBLIC_URL}/macroIcons/resetMarker.png`;\n  return (\n    <MarkContainer>\n      <Button onClick={resetHandler} isClicked={false} color=\"blue\">\n        <img width=\"30px\" src={resetIconSrc} />\n      </Button>\n    </MarkContainer>\n  );\n};\n\nconst Macros = () => {\n  const dispatch = useDispatch();\n  const { member } = useSelector((state: RootState) => state.party);\n\n  const buttonResetHandler = () => {\n    dispatch(resetChainPlayer());\n  };\n\n  return (\n    <Container>\n      <Marks>\n        {member &&\n          member.map((player, i) => {\n            return (\n              <Mark\n                key={`macro_${i}_${player.name}`}\n                index={i}\n                player={player}\n              />\n            );\n          })}\n        <ResetMark resetHandler={buttonResetHandler} />\n      </Marks>\n    </Container>\n  );\n};\n\nexport default Macros;\n","import React, { useEffect } from 'react';\nimport {\n  Debuff,\n  PartyListState,\n  Player,\n  addDebuff,\n  addMultipleDebuffs,\n  removeAllHellwallDebuffs,\n  removeDiceDebuffs,\n  removeDiceHellwallDebuffs,\n} from '../redux/slices/playerSlice';\nimport { TPhase } from '../redux/slices/simulationSlice';\nimport { batch, useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../redux/store';\n\nconst getDynamisTargetPlayers = (\n  chainedIndexes: number[],\n  players: Player[],\n  fullPlayers: Player[],\n  phase: TPhase,\n) => {\n  const excludedPlayers = chainedIndexes.map((n, i) => {\n    if (phase === 'sigma') {\n      return (i === 0 || i === 2) && fullPlayers[n].name;\n    } else if (phase === 'omega1' || phase === 'omega2') {\n      return (i === 0 || i === 1) && fullPlayers[n].name;\n    } else {\n      return 'not included';\n    }\n  });\n  return players.filter((n) => !excludedPlayers.includes(n.name));\n};\n\nconst useDebuffGenerator = () => {\n  const dispatch = useDispatch();\n  const { member, chainedIndexes } = useSelector(\n    (state: RootState) => state.party,\n  );\n\n  useEffect(() => {}, [member, chainedIndexes]);\n\n  const generateRandomDynamis = (phase: TPhase) => {\n    const players = [...member];\n    const potentialTargets = [] as Player[];\n    //무조건 헬월 대상자 2명이 포함되어있어야한다.\n    const hellwallTargets = member\n      .filter((n) => {\n        if (\n          n.debuffs.includes('hellwallFar') ||\n          n.debuffs.includes('hellwallNear')\n        ) {\n          return true;\n        } else {\n          potentialTargets.push({ ...n, debuffs: [] });\n          return false;\n        }\n      })\n      .map((n) => {\n        return {\n          ...n,\n          debuffs: [],\n        };\n      });\n\n    const confirmedTargets = [...hellwallTargets];\n\n    const chooser = randomNoRepeats(\n      getDynamisTargetPlayers(chainedIndexes, potentialTargets, players, phase),\n    );\n\n    for (let i = 0; i < 4; i++) {\n      confirmedTargets.push(chooser());\n    }\n    return confirmedTargets;\n  };\n\n  const generateOmegaRandomDynamis = (phase: TPhase) => {\n    const players = [...member];\n    const potentialTargets = [] as Player[];\n    const dice = phase === 'omega1' ? 'dice1' : 'dice2';\n    //무조건 헬월 대상자 2명이 포함되어있어야한다.\n    const hellwallTargets = member\n      .filter((n) => {\n        if (\n          (n.debuffs.includes('hellwallFar') ||\n            n.debuffs.includes('hellwallNear')) &&\n          n.debuffs.includes(dice)\n        ) {\n          return true;\n        } else {\n          potentialTargets.push({ ...n, debuffs: [] });\n          return false;\n        }\n      })\n      .map((n) => {\n        return {\n          ...n,\n          debuffs: [],\n        };\n      });\n\n    const confirmedTargets = [...hellwallTargets];\n\n    const chooser = randomNoRepeats(\n      getDynamisTargetPlayers(chainedIndexes, potentialTargets, players, phase),\n    );\n\n    for (let i = 0; i < 4; i++) {\n      confirmedTargets.push(chooser());\n    }\n    return confirmedTargets;\n  };\n\n  const randomNoRepeats = (array) => {\n    var copy = array.slice(0);\n    return function () {\n      if (copy.length < 1) {\n        copy = array.slice(0);\n      }\n      var index = Math.floor(Math.random() * copy.length);\n      var item = copy[index];\n      copy.splice(index, 1);\n      return item;\n    };\n  };\n\n  const applyDynamis = (phase: TPhase) => {\n    const debuffedPlayers = generateRandomDynamis(phase).map((n) => {\n      return {\n        ...n,\n        debuffs: [...n.debuffs, 'dynamis'],\n      };\n    }) as Player[];\n    batch(() => {\n      dispatch(addMultipleDebuffs({ targetPlayers: debuffedPlayers }));\n      dispatch(removeAllHellwallDebuffs());\n    });\n  };\n\n  const applyOmegaDynamis = (phase: TPhase) => {\n    const debuffedPlayers = generateOmegaRandomDynamis(phase).map((n) => {\n      return {\n        ...n,\n        debuffs: [...n.debuffs, 'dynamis'],\n      };\n    }) as Player[];\n    batch(() => {\n      dispatch(addMultipleDebuffs({ targetPlayers: debuffedPlayers }));\n      dispatch(\n        removeDiceHellwallDebuffs({\n          dice: phase === 'omega1' ? 'dice1' : 'dice2',\n        }),\n      );\n      dispatch(\n        removeDiceDebuffs({ dice: phase === 'omega1' ? 'dice1' : 'dice2' }),\n      );\n    });\n  };\n\n  const generateRandomHellWall = (party: Player[], phase: TPhase) => {\n    const hellWallTargets = new Array();\n    const debuffCount = phase === 'omega1' ? 4 : 2;\n    const chooser = randomNoRepeats(party);\n    for (let i = 0; i < debuffCount; i++) {\n      hellWallTargets.push(chooser());\n    }\n    return hellWallTargets;\n  };\n\n  const applyHellwall = (phase: TPhase) => {\n    const targetPlayers = generateRandomHellWall(member, phase).map((n) => {\n      return { ...n, debuffs: [] };\n    }) as Player[];\n    const debuffedPlayers = targetPlayers.map((n, i) => {\n      const debuffs = [i % 2 === 0 ? 'hellwallFar' : 'hellwallNear'];\n      if (phase === 'omega1') {\n        debuffs.push(i < 2 ? 'dice1' : 'dice2');\n      }\n      return {\n        ...n,\n        debuffs: [...n.debuffs, ...(debuffs as Debuff[])],\n      };\n    });\n\n    dispatch(addMultipleDebuffs({ targetPlayers: debuffedPlayers }));\n  };\n\n  const removeHellwall = () => {\n    dispatch(removeAllHellwallDebuffs());\n  };\n\n  return {\n    applyHellwall,\n    applyDynamis,\n    applyOmegaDynamis,\n    removeHellwall,\n  };\n};\n\nexport default useDebuffGenerator;\n","import useDebuffGenerator from './useDebuffGenerator';\nimport { useEffect, useState } from 'react';\nimport useCountDown from 'react-countdown-hook';\nimport useValidator from './useValidator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateAfter, updateBefore } from '../redux/slices/simulationSlice';\nimport { RootState } from '../redux/store';\n\ntype TPhaseStatus =\n  | 'idle'\n  | 'delta'\n  | 'deltaHellwall'\n  | 'sigma'\n  | 'sigmaHellwall'\n  | 'omega1'\n  | 'omega1Hellwall'\n  | 'omega2'\n  | 'omega2Hellwall'\n  | 'end';\n\nexport const phaseInitalTimes = {\n  delta: {\n    start: 10000,\n    end: 5000,\n  },\n  sigma: {\n    start: 10000,\n    end: 5000,\n  },\n  omega1: {\n    start: 10000,\n    end: 5000,\n  },\n  omega2: {\n    start: 10000,\n    end: 5000,\n  },\n};\n\nexport type TSimulationResult = '평가중' | '성공' | '실패';\n\nconst usePhaseManager = () => {\n  const { delta, sigma, omega1, omega2 } = phaseInitalTimes;\n  const { party } = useSelector((state: RootState) => state);\n  const debuffGenerator = useDebuffGenerator();\n  const [phaseStatus, setPhaseStatus] = useState<TPhaseStatus>('idle');\n  const [simulationResult, setSimulationResult] =\n    useState<TSimulationResult>('평가중');\n  const [deltaTimeLeft, deltaCountdown] = useCountDown(delta.start);\n  const [deltaHellwallTimeLeft, deltaHellwallCountdown] = useCountDown(\n    delta.end,\n  );\n  const [sigmaTimeLeft, sigmaCountdown] = useCountDown(sigma.start);\n  const [sigmaHellwallTimeLeft, sigmaHellwallCountdown] = useCountDown(\n    sigma.end,\n  );\n  const [omega1TimeLeft, omega1Countdown] = useCountDown(omega1.start);\n  const [omega1HellwallTimeLeft, omega1HellwallCountdown] = useCountDown(\n    omega1.end,\n  );\n  const [omega2TimeLeft, omega2Countdown] = useCountDown(omega2.start);\n  const [omega2HellwallTimeLeft, omega2HellwallCountdown] = useCountDown(\n    omega2.end,\n  );\n\n  //Delta ========================\n  useEffect(() => {\n    if (deltaTimeLeft <= 0 && phaseStatus === 'delta') {\n      debuffGenerator.applyHellwall('delta');\n      setPhaseStatus('deltaHellwall');\n      deltaHellwallCountdown.start();\n    }\n  }, [deltaTimeLeft, phaseStatus]);\n\n  useEffect(() => {\n    if (deltaHellwallTimeLeft <= 0 && phaseStatus === 'deltaHellwall') {\n      debuffGenerator.applyDynamis('delta');\n      setPhaseStatus('sigma');\n      sigmaCountdown.start();\n    }\n  }, [deltaHellwallTimeLeft, phaseStatus]);\n\n  //Sigma ========================\n  useEffect(() => {\n    if (sigmaTimeLeft <= 0 && phaseStatus === 'sigma') {\n      debuffGenerator.applyHellwall('sigma');\n      setPhaseStatus('sigmaHellwall');\n      sigmaHellwallCountdown.start();\n    }\n  }, [sigmaTimeLeft, phaseStatus]);\n\n  useEffect(() => {\n    if (sigmaHellwallTimeLeft <= 0 && phaseStatus === 'sigmaHellwall') {\n      debuffGenerator.applyDynamis('sigma');\n      setPhaseStatus('omega1');\n      omega1Countdown.start();\n    }\n  }, [sigmaHellwallTimeLeft, phaseStatus]);\n\n  //Omega1 ========================\n  useEffect(() => {\n    if (omega1TimeLeft <= 0 && phaseStatus === 'omega1') {\n      debuffGenerator.applyHellwall('omega1');\n      setPhaseStatus('omega1Hellwall');\n      omega1HellwallCountdown.start();\n    }\n  }, [omega1TimeLeft, phaseStatus]);\n\n  useEffect(() => {\n    if (omega1HellwallTimeLeft <= 0 && phaseStatus === 'omega1Hellwall') {\n      debuffGenerator.applyOmegaDynamis('omega1');\n      setPhaseStatus('omega2');\n      omega2Countdown.start();\n    }\n  }, [omega1HellwallTimeLeft, phaseStatus]);\n\n  //Omega2 ========================\n  useEffect(() => {\n    if (omega2TimeLeft <= 0 && phaseStatus === 'omega2') {\n      setPhaseStatus('omega2Hellwall');\n      omega2HellwallCountdown.start();\n    }\n  }, [omega2TimeLeft, phaseStatus]);\n\n  useEffect(() => {\n    if (omega2HellwallTimeLeft <= 0 && phaseStatus === 'omega2Hellwall') {\n      debuffGenerator.applyOmegaDynamis('omega2');\n      setPhaseStatus('end');\n    }\n  }, [omega2HellwallTimeLeft, phaseStatus]);\n\n  useEffect(() => {\n    if (phaseStatus === 'end') {\n      const isSuccess =\n        party.member.filter((n) => n.debuffs.length === 3).length === 8;\n      setSimulationResult(isSuccess ? '성공' : '실패');\n    }\n  }, [phaseStatus]);\n\n  const startDeltaPhase = () => {\n    setPhaseStatus('delta');\n    deltaCountdown.start();\n  };\n  const startSigmaPhase = () => {\n    setPhaseStatus('sigma');\n    sigmaCountdown.start();\n  };\n  const startOmega1Phase = () => {\n    setPhaseStatus('omega1');\n    omega1Countdown.start();\n  };\n  const startOmega2Phase = () => {\n    setPhaseStatus('omega2');\n    omega2Countdown.start();\n  };\n\n  return {\n    timer: {\n      deltaTimeLeft,\n      deltaHellwallTimeLeft,\n      sigmaTimeLeft,\n      sigmaHellwallTimeLeft,\n      omega1TimeLeft,\n      omega1HellwallTimeLeft,\n      omega2TimeLeft,\n      omega2HellwallTimeLeft,\n    },\n    simulationResult,\n    startDeltaPhase,\n    startSigmaPhase,\n    startOmega1Phase,\n    startOmega2Phase,\n  };\n};\n\nexport default usePhaseManager;\n","import React from 'react';\nimport styled from 'styled-components';\nimport usePhaseManager, {\n  TSimulationResult,\n  phaseInitalTimes,\n} from '../hooks/usePhaseManager';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\n\nconst Container = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n`;\n\nconst TimerContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Timer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst Time = styled.div`\n  text-align: center;\n  font-weight: bold;\n  font-size: 120px;\n`;\nconst Prefix = styled.div`\n  text-align: center;\n  font-weight: bold;\n  font-size: 32px;\n`;\nconst Suffix = styled.div`\n  text-align: center;\n  font-weight: bold;\n  font-size: 32px;\n`;\nconst Result = styled.div<{ simulationResult: TSimulationResult }>`\n  text-align: center;\n  font-size: 80px;\n  font-weight: bold;\n  color: ${(props) => (props.simulationResult === '성공' ? 'green' : 'red')};\n`;\n\ninterface Props {\n  timer: {\n    deltaTimeLeft: number;\n    deltaHellwallTimeLeft: number;\n    sigmaTimeLeft: number;\n    sigmaHellwallTimeLeft: number;\n    omega1TimeLeft: number;\n    omega1HellwallTimeLeft: number;\n    omega2TimeLeft: number;\n    omega2HellwallTimeLeft: number;\n  };\n  simulationResult: TSimulationResult;\n}\n\nconst PhaseTimers = ({ timer, simulationResult }: Props) => {\n  const { delta, sigma, omega1, omega2 } = phaseInitalTimes;\n  const showDeltaTimer = timer.deltaTimeLeft > 0;\n  const showDeltaHellwallTimer = timer.deltaHellwallTimeLeft > 0;\n  const showSigmaTimer = timer.sigmaTimeLeft > 0;\n  const showSigmaHellwallTimer = timer.sigmaHellwallTimeLeft > 0;\n  const showOmega1Timer = timer.omega1TimeLeft > 0;\n  const showOmega1HellwallTimer = timer.omega1HellwallTimeLeft > 0;\n  const showOmega2Timer = timer.omega2TimeLeft > 0;\n  const showOmega2HellwallTimer = timer.omega2HellwallTimeLeft > 0;\n  return (\n    <Container>\n      <TimerContainer>\n        {simulationResult === '성공' && (\n          <Result simulationResult={simulationResult}>\n            {simulationResult}!!!\n          </Result>\n        )}\n        {simulationResult === '실패' && (\n          <Result simulationResult={simulationResult}>\n            {simulationResult}...\n          </Result>\n        )}\n        {showDeltaTimer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={delta.start / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>헬로월드 부여</Prefix>\n                  <Time>{timer.deltaTimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n        {showDeltaHellwallTimer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={delta.end / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>뒤나미스 시전</Prefix>\n                  <Time>{timer.deltaHellwallTimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n        {showSigmaTimer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={sigma.start / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>헬로월드 시전</Prefix>\n                  <Time>{timer.sigmaTimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n        {showSigmaHellwallTimer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={sigma.end / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>뒤나미스 시전</Prefix>\n                  <Time>{timer.sigmaHellwallTimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n        {showOmega1Timer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={omega1.start / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>헬로월드 시전</Prefix>\n                  <Time>{timer.omega1TimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n        {showOmega1HellwallTimer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={omega1.end / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>뒤나미스 시전</Prefix>\n                  <Time>{timer.omega1HellwallTimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n        {showOmega2Timer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={omega2.start / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>헬로월드 시전</Prefix>\n                  <Time>{timer.omega2TimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n        {showOmega2HellwallTimer && (\n          <CountdownCircleTimer\n            isPlaying\n            duration={omega2.end / 1000}\n            colors={['#004777', '#F7B801', '#A30000', '#A30000']}\n            colorsTime={[7, 5, 2, 0]}\n            strokeWidth={50}\n            size={500}\n          >\n            {({ remainingTime }) => {\n              return (\n                <Timer>\n                  <Prefix>뒤나미스 시전</Prefix>\n                  <Time>{timer.omega2HellwallTimeLeft / 1000}</Time>\n                  <Suffix>초</Suffix>\n                </Timer>\n              );\n            }}\n          </CountdownCircleTimer>\n        )}\n      </TimerContainer>\n    </Container>\n  );\n};\n\nexport default PhaseTimers;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport PartyList from '../components/PartyList';\nimport Macros from '../components/PartyList/Macros';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../redux/store';\nimport usePhaseManager from '../hooks/usePhaseManager';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport PhaseTimers from '../components/PhaseTimers';\n\nconst Container = styled.main`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Button = styled.button`\n  min-height: 150px;\n  min-width: 150px;\n  margin: 2px;\n  background: rgba(255, 255, 255, 0.16);\n  font-size: 32px;\n  border-radius: 10px;\n  box-shadow: 0 0px 5px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(6.3px);\n  -webkit-backdrop-filter: blur(6.3px);\n  border: 1px solid rgba(255, 255, 255, 0.47);\n  &:hover {\n    border: 2px solid rgb(255, 238, 153);\n    box-shadow: 0 0px 30px rgb(255, 238, 153);\n  }\n`;\n\nconst PartyContainer = styled.div`\n  display: flex;\n`;\n\nconst ControlButtonContainer = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  width: 100px;\n  left: 0;\n  bottom: 0;\n`;\n\nconst RuleContainer = styled.div`\n  position: absolute;\n  font-size: 10px;\n  right: 0;\n  bottom: 0;\n`;\n\nexport default function Sigma() {\n  const phaseManager = usePhaseManager();\n  const [isStartButtonClicked, setIsStartButtonClicked] = useState(false);\n  const onClickStartSimulation = () => {\n    phaseManager.startDeltaPhase();\n    setIsStartButtonClicked(!isStartButtonClicked);\n  };\n  const onClickResetSimulation = () => {\n    window.location.reload();\n  };\n\n  return (\n    <Container className=\"App\">\n      <PartyContainer>\n        <PartyList />\n        <Macros />\n      </PartyContainer>\n      <ControlButtonContainer>\n        {isStartButtonClicked ? (\n          <Button onClick={onClickResetSimulation}>다시시작</Button>\n        ) : (\n          <Button onClick={onClickStartSimulation}>시작</Button>\n        )}\n      </ControlButtonContainer>\n\n      <PhaseTimers\n        timer={phaseManager.timer}\n        simulationResult={phaseManager.simulationResult}\n      />\n      <RuleContainer>\n        <div>\n          <b>델타</b>\n          <p>델타 페이즈에서는 특별히 할것이 없습니다.</p>\n        </div>\n        <div>\n          <b>시그마</b>\n          <p>숙박징 1번과 3번은 뒤나미스 디버프를 부여 받지 않습니다.</p>\n        </div>\n        <div>\n          <b>오메가1</b>\n          <p>숙박징 1번과 2번은 뒤나미스 디버프를 부여 받지 않습니다.</p>\n        </div>\n        <div>\n          <b>오메가2</b>\n          <p>숙박징 1번과 2번은 뒤나미스 디버프를 부여 받지 않습니다.</p>\n        </div>\n        <div>\n          <b>결과</b>\n          <p>모두가 뒤나미스 3스택으로 마무리 되어야 성공합니다.</p>\n        </div>\n      </RuleContainer>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './routes/Home';\n\nexport default function Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n    </Switch>\n  );\n}\n","// sizes for media queries\nconst sizes = {\n  giant: 1080,\n  desktop: 922,\n  tablet: 768,\n  phone: 576,\n};\n\nexport const fontSize = {\n  smallFontSize: '9px',\n  normalFontSize: '12px',\n  largeFontSize: '15px',\n};\n\nexport const websiteTitle = 'react-typescript-template';\n\nexport const color = {\n  darkmode: {\n    bgColor: '#14181C',\n    fontColor: '#ffffff',\n    mainColor: '#f6e58d',\n  },\n  default: {\n    bgColor: '#efefef',\n    fontColor: '#14181C',\n    mainColor: '#f6e58d',\n  },\n};\n\nexport const themeList = {\n  light: {\n    body: '#E2E2E2',\n    text: '#363537',\n    toggleBorder: '#FFF',\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\n  },\n  dark: {\n    body: '#363537',\n    text: '#FAFAFA',\n    toggleBorder: '#6B8096',\n    gradient: 'linear-gradient(#091236, #1E215D)',\n  },\n};\n\nconst customMediaQuery = (maxWidth: number) =>\n  `@media (max-width: ${maxWidth}px)`;\n\nexport const media: any = {\n  custom: customMediaQuery,\n  desktop: customMediaQuery(sizes.desktop),\n  tablet: customMediaQuery(sizes.tablet),\n  phone: customMediaQuery(sizes.phone),\n};\n","import { createGlobalStyle } from 'styled-components';\nimport { fontSize, color, media } from './config/_mixin';\nimport { IThemeInterface } from './interfaces';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nexport const GlobalStyle = createGlobalStyle<IThemeInterface>`\n  *,\n  *::after,\n  *::before {\n    box-sizing: border-box;\n  }\n\n  #root{\n    height:100%;\n  }\n  \n\n  body{\n    padding: 30px;\n    font-family: 'Nanum Gothic', sans-serif;\n    font-size: ${fontSize.normalFontSize};\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    height: 100%;\n    width:100%;\n    transition: background 0.5s ease-in-out;\n    transition: color 0.5s ease-in-out;\n\n    /* Responsive Design */\n    ${media.giant} {\n      /* Giant View */\n    }\n    ${media.desktop} {\n      /* Desktop View */\n    }\n    ${media.tablet} {\n      /* Tablet View */\n    }\n    ${media.phone} {\n      /* Phone View */\n    }\n  }\n\n  a{\n    text-decoration: none !important;\n    &:hover{\n        color: ${color.default.mainColor};\n    }\n  }\n\n  button{\n    cursor: pointer;\n    background-color: white;\n    outline: none;\n    border: none;\n    &:active {\n    }\n  }\n\n  /* animations */\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  @keyframes fadeIn {\n    0%{\n      opacity: 0;\n    }\n    100%{\n      opacity: 1;\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop({ children }) {\n  const { pathname } = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return children;\n}\n","export interface User {\n  id: string;\n  password: string;\n  username: string;\n}\n\nexport interface IThemeInterface {\n  theme: { body: string; text: string };\n}\n\nexport enum Theme {\n  DARK,\n  LIGHT,\n}\n","import React, { createContext } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { BackTop } from 'antd';\nimport { ToastContainer } from 'react-toastify';\nimport Router from './Router';\nimport { GlobalStyle } from './global-styles';\nimport ScrollToTop from './components/ScrollToTop';\nimport { Theme } from './interfaces';\nimport { themeList } from './config/_mixin';\nimport useDarkMode from './hooks/useDarkMode';\n\nexport const ThemeContext = createContext<{\n  theme: Theme;\n  toggleTheme: () => void;\n}>({\n  theme: Theme.LIGHT,\n  toggleTheme: () => {\n    console.error(\n      '[react-typescript-boilerplate] you should set { theme, toggleTheme } value with useDarkMode(...)',\n    );\n    return null;\n  },\n});\n\nexport default function App() {\n  const { theme, toggleTheme } = useDarkMode(Theme.LIGHT);\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      <GlobalStyle\n        theme={theme === Theme.LIGHT ? themeList.light : themeList.dark}\n      />\n      <ToastContainer\n        draggable={true}\n        position={'bottom-right'}\n        autoClose={5000}\n        pauseOnHover={true}\n      />\n      <BrowserRouter basename=\"/theOmegaProtocal\">\n        <ScrollToTop>\n          <BackTop />\n          <Router />\n        </ScrollToTop>\n      </BrowserRouter>\n    </ThemeContext.Provider>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { Theme } from '../interfaces';\n\nconst THEME_KEY = 'theme';\n\nexport default function useDarkMode(defaultTheme: Theme.LIGHT) {\n  const [theme, setTheme] = useState<Theme>(defaultTheme);\n  const toggleTheme = () => {\n    if (theme === Theme.LIGHT) {\n      window.localStorage.setItem(THEME_KEY, JSON.stringify(Theme.DARK));\n      setTheme(Theme.DARK);\n    } else {\n      window.localStorage.setItem(THEME_KEY, JSON.stringify(Theme.LIGHT));\n      setTheme(Theme.LIGHT);\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem(THEME_KEY);\n    if (localTheme !== null) {\n      setTheme(JSON.parse(localTheme));\n    }\n  }, []);\n\n  return { theme, toggleTheme };\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\nimport { Debuff, Player } from './playerSlice';\n\nexport type TPhase = 'delta' | 'sigma' | 'omega1' | 'omega2';\n\nexport interface SimulationState {\n  history: {\n    [key: string]: {\n      before: {\n        member?: Player[];\n        chainedIndexes?: number[];\n      };\n      after: {\n        member?: Player[];\n        chainedIndexes?: number[];\n      };\n    };\n  };\n}\n\nconst initialState: SimulationState = {\n  history: {\n    delta: { before: {}, after: {} },\n    sigma: { before: {}, after: {} },\n    omega1: { before: {}, after: {} },\n    omega2: { before: {}, after: {} },\n  },\n};\n\nexport const simulationSlice = createSlice({\n  name: 'simulation',\n  initialState,\n  reducers: {\n    updateBefore: (\n      state,\n      action: PayloadAction<{\n        phase: TPhase;\n        member: Player[];\n        chainedIndexes: number[];\n      }>,\n    ) => {\n      const { phase, member, chainedIndexes } = action.payload;\n      state.history[phase].before = {\n        member,\n        chainedIndexes,\n      };\n    },\n    updateAfter: (\n      state,\n      action: PayloadAction<{\n        phase: TPhase;\n        member: Player[];\n        chainedIndexes: number[];\n      }>,\n    ) => {\n      const { phase, member, chainedIndexes } = action.payload;\n      state.history[phase].after = {\n        member,\n        chainedIndexes,\n      };\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { updateAfter, updateBefore } = simulationSlice.actions;\n\nexport default simulationSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport partyReducer from './slices/playerSlice';\nimport simulationReducer from './slices/simulationSlice';\n\nexport const store = configureStore({\n  reducer: { party: partyReducer, simulation: simulationReducer },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}